# Code generated by github.com/opendatahub-io/model-registry/gqlmapper. DO NOT EDIT.
# schema generated from ml-metadata.yaml

# Artifacts

# Type name map "MlmdDataset":"mlmd.Dataset"
type MlmdDataset implements ArtifactInterface {
    id: ID!
    typeId: ID!
    uri: String
    state: ArtifactState
    name: String
    externalId: String
    createTimeSinceEpoch: Int64!
    lastUpdateTimeSinceEpoch: Int64!
    intProp: Int64
    secondProp: Float
    type: ArtifactType!
    properties : [InstanceProperty!]!
    attributions: [Attribution!]
    events: [Event!]
}

# Type name map "MlmdModel":"mlmd.Model"
type MlmdModel implements ArtifactInterface {
    id: ID!
    typeId: ID!
    uri: String
    state: ArtifactState
    name: String
    externalId: String
    createTimeSinceEpoch: Int64!
    lastUpdateTimeSinceEpoch: Int64!
    doubleProp: Float
    type: ArtifactType!
    properties : [InstanceProperty!]!
    attributions: [Attribution!]
    events: [Event!]
}

# Type name map "MlmdMetrics":"mlmd.Metrics"
type MlmdMetrics implements ArtifactInterface {
    id: ID!
    typeId: ID!
    uri: String
    state: ArtifactState
    name: String
    externalId: String
    createTimeSinceEpoch: Int64!
    lastUpdateTimeSinceEpoch: Int64!
    stringProp: String
    type: ArtifactType!
    properties : [InstanceProperty!]!
    attributions: [Attribution!]
    events: [Event!]
}

# Type name map "MlmdStatistics":"mlmd.Statistics"
type MlmdStatistics implements ArtifactInterface {
    id: ID!
    typeId: ID!
    uri: String
    state: ArtifactState
    name: String
    externalId: String
    createTimeSinceEpoch: Int64!
    lastUpdateTimeSinceEpoch: Int64!
    structProp: [StructTuple!]
    type: ArtifactType!
    properties : [InstanceProperty!]!
    attributions: [Attribution!]
    events: [Event!]
}
# Contexts
# Executions

# Type name map "MlmdTrain":"mlmd.Train"
type MlmdTrain implements ExecutionInterface {
    id: ID!
    typeId: ID!
    lastKnownState: ExecutionState
    name: String
    externalId: String
    createTimeSinceEpoch: Int64!
    lastUpdateTimeSinceEpoch: Int64!
    protoProp: ProtoTypeValue
    type: ExecutionType!
    properties: [InstanceProperty!]!
    associations: [Association!]
    events: [Event!]
}

# Type name map "MlmdTransform":"mlmd.Transform"
type MlmdTransform implements ExecutionInterface {
    id: ID!
    typeId: ID!
    lastKnownState: ExecutionState
    name: String
    externalId: String
    createTimeSinceEpoch: Int64!
    lastUpdateTimeSinceEpoch: Int64!
    booleanProp: Boolean
    type: ExecutionType!
    properties: [InstanceProperty!]!
    associations: [Association!]
    events: [Event!]
}

# Type name map "MlmdProcess":"mlmd.Process"
type MlmdProcess implements ExecutionInterface {
    id: ID!
    typeId: ID!
    lastKnownState: ExecutionState
    name: String
    externalId: String
    createTimeSinceEpoch: Int64!
    lastUpdateTimeSinceEpoch: Int64!
    type: ExecutionType!
    properties: [InstanceProperty!]!
    associations: [Association!]
    events: [Event!]
}

# Type name map "MlmdEvaluate":"mlmd.Evaluate"
type MlmdEvaluate implements ExecutionInterface {
    id: ID!
    typeId: ID!
    lastKnownState: ExecutionState
    name: String
    externalId: String
    createTimeSinceEpoch: Int64!
    lastUpdateTimeSinceEpoch: Int64!
    type: ExecutionType!
    properties: [InstanceProperty!]!
    associations: [Association!]
    events: [Event!]
}

# Type name map "MlmdDeploy":"mlmd.Deploy"
type MlmdDeploy implements ExecutionInterface {
    id: ID!
    typeId: ID!
    lastKnownState: ExecutionState
    name: String
    externalId: String
    createTimeSinceEpoch: Int64!
    lastUpdateTimeSinceEpoch: Int64!
    type: ExecutionType!
    properties: [InstanceProperty!]!
    associations: [Association!]
    events: [Event!]
}

# queries
extend type Query {
    mlmdDatasets(filter: InstanceFilter): [MlmdDataset!]
    mlmdModels(filter: InstanceFilter): [MlmdModel!]
    mlmdMetrics(filter: InstanceFilter): [MlmdMetrics!]
    mlmdStatistics(filter: InstanceFilter): [MlmdStatistics!]
    mlmdTrains(filter: InstanceFilter): [MlmdTrain!]
    mlmdTransforms(filter: InstanceFilter): [MlmdTransform!]
    mlmdProcesses(filter: InstanceFilter): [MlmdProcess!]
    mlmdEvaluates(filter: InstanceFilter): [MlmdEvaluate!]
    mlmdDeploys(filter: InstanceFilter): [MlmdDeploy!]
}
