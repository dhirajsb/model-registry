package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"
	"fmt"

	"github.com/opendatahub-io/model-registry/internal/model/graph"
)

// Type is the resolver for the type field.
func (r *mlmdDatasetResolver) Type(ctx context.Context, obj *graph.MlmdDataset) (*graph.ArtifactType, error) {
	panic(fmt.Errorf("not implemented: Type - type"))
}

// Attributions is the resolver for the attributions field.
func (r *mlmdDatasetResolver) Attributions(ctx context.Context, obj *graph.MlmdDataset) ([]*graph.Attribution, error) {
	panic(fmt.Errorf("not implemented: Attributions - attributions"))
}

// Events is the resolver for the events field.
func (r *mlmdDatasetResolver) Events(ctx context.Context, obj *graph.MlmdDataset) ([]*graph.Event, error) {
	panic(fmt.Errorf("not implemented: Events - events"))
}

// Type is the resolver for the type field.
func (r *mlmdDeployResolver) Type(ctx context.Context, obj *graph.MlmdDeploy) (*graph.ExecutionType, error) {
	panic(fmt.Errorf("not implemented: Type - type"))
}

// Associations is the resolver for the associations field.
func (r *mlmdDeployResolver) Associations(ctx context.Context, obj *graph.MlmdDeploy) ([]*graph.Association, error) {
	panic(fmt.Errorf("not implemented: Associations - associations"))
}

// Events is the resolver for the events field.
func (r *mlmdDeployResolver) Events(ctx context.Context, obj *graph.MlmdDeploy) ([]*graph.Event, error) {
	panic(fmt.Errorf("not implemented: Events - events"))
}

// Type is the resolver for the type field.
func (r *mlmdEvaluateResolver) Type(ctx context.Context, obj *graph.MlmdEvaluate) (*graph.ExecutionType, error) {
	panic(fmt.Errorf("not implemented: Type - type"))
}

// Associations is the resolver for the associations field.
func (r *mlmdEvaluateResolver) Associations(ctx context.Context, obj *graph.MlmdEvaluate) ([]*graph.Association, error) {
	panic(fmt.Errorf("not implemented: Associations - associations"))
}

// Events is the resolver for the events field.
func (r *mlmdEvaluateResolver) Events(ctx context.Context, obj *graph.MlmdEvaluate) ([]*graph.Event, error) {
	panic(fmt.Errorf("not implemented: Events - events"))
}

// Type is the resolver for the type field.
func (r *mlmdMetricsResolver) Type(ctx context.Context, obj *graph.MlmdMetrics) (*graph.ArtifactType, error) {
	panic(fmt.Errorf("not implemented: Type - type"))
}

// Attributions is the resolver for the attributions field.
func (r *mlmdMetricsResolver) Attributions(ctx context.Context, obj *graph.MlmdMetrics) ([]*graph.Attribution, error) {
	panic(fmt.Errorf("not implemented: Attributions - attributions"))
}

// Events is the resolver for the events field.
func (r *mlmdMetricsResolver) Events(ctx context.Context, obj *graph.MlmdMetrics) ([]*graph.Event, error) {
	panic(fmt.Errorf("not implemented: Events - events"))
}

// Type is the resolver for the type field.
func (r *mlmdModelResolver) Type(ctx context.Context, obj *graph.MlmdModel) (*graph.ArtifactType, error) {
	panic(fmt.Errorf("not implemented: Type - type"))
}

// Attributions is the resolver for the attributions field.
func (r *mlmdModelResolver) Attributions(ctx context.Context, obj *graph.MlmdModel) ([]*graph.Attribution, error) {
	panic(fmt.Errorf("not implemented: Attributions - attributions"))
}

// Events is the resolver for the events field.
func (r *mlmdModelResolver) Events(ctx context.Context, obj *graph.MlmdModel) ([]*graph.Event, error) {
	panic(fmt.Errorf("not implemented: Events - events"))
}

// Type is the resolver for the type field.
func (r *mlmdProcessResolver) Type(ctx context.Context, obj *graph.MlmdProcess) (*graph.ExecutionType, error) {
	panic(fmt.Errorf("not implemented: Type - type"))
}

// Associations is the resolver for the associations field.
func (r *mlmdProcessResolver) Associations(ctx context.Context, obj *graph.MlmdProcess) ([]*graph.Association, error) {
	panic(fmt.Errorf("not implemented: Associations - associations"))
}

// Events is the resolver for the events field.
func (r *mlmdProcessResolver) Events(ctx context.Context, obj *graph.MlmdProcess) ([]*graph.Event, error) {
	panic(fmt.Errorf("not implemented: Events - events"))
}

// Type is the resolver for the type field.
func (r *mlmdStatisticsResolver) Type(ctx context.Context, obj *graph.MlmdStatistics) (*graph.ArtifactType, error) {
	panic(fmt.Errorf("not implemented: Type - type"))
}

// Attributions is the resolver for the attributions field.
func (r *mlmdStatisticsResolver) Attributions(ctx context.Context, obj *graph.MlmdStatistics) ([]*graph.Attribution, error) {
	panic(fmt.Errorf("not implemented: Attributions - attributions"))
}

// Events is the resolver for the events field.
func (r *mlmdStatisticsResolver) Events(ctx context.Context, obj *graph.MlmdStatistics) ([]*graph.Event, error) {
	panic(fmt.Errorf("not implemented: Events - events"))
}

// Type is the resolver for the type field.
func (r *mlmdTrainResolver) Type(ctx context.Context, obj *graph.MlmdTrain) (*graph.ExecutionType, error) {
	panic(fmt.Errorf("not implemented: Type - type"))
}

// Associations is the resolver for the associations field.
func (r *mlmdTrainResolver) Associations(ctx context.Context, obj *graph.MlmdTrain) ([]*graph.Association, error) {
	panic(fmt.Errorf("not implemented: Associations - associations"))
}

// Events is the resolver for the events field.
func (r *mlmdTrainResolver) Events(ctx context.Context, obj *graph.MlmdTrain) ([]*graph.Event, error) {
	panic(fmt.Errorf("not implemented: Events - events"))
}

// Type is the resolver for the type field.
func (r *mlmdTransformResolver) Type(ctx context.Context, obj *graph.MlmdTransform) (*graph.ExecutionType, error) {
	panic(fmt.Errorf("not implemented: Type - type"))
}

// Associations is the resolver for the associations field.
func (r *mlmdTransformResolver) Associations(ctx context.Context, obj *graph.MlmdTransform) ([]*graph.Association, error) {
	panic(fmt.Errorf("not implemented: Associations - associations"))
}

// Events is the resolver for the events field.
func (r *mlmdTransformResolver) Events(ctx context.Context, obj *graph.MlmdTransform) ([]*graph.Event, error) {
	panic(fmt.Errorf("not implemented: Events - events"))
}

// MlmdDatasets is the resolver for the mlmdDatasets field.
func (r *queryResolver) MlmdDatasets(ctx context.Context, filter *graph.InstanceFilter) ([]*graph.MlmdDataset, error) {
	panic(fmt.Errorf("not implemented: MlmdDatasets - mlmdDatasets"))
}

// MlmdModels is the resolver for the mlmdModels field.
func (r *queryResolver) MlmdModels(ctx context.Context, filter *graph.InstanceFilter) ([]*graph.MlmdModel, error) {
	panic(fmt.Errorf("not implemented: MlmdModels - mlmdModels"))
}

// MlmdMetrics is the resolver for the mlmdMetrics field.
func (r *queryResolver) MlmdMetrics(ctx context.Context, filter *graph.InstanceFilter) ([]*graph.MlmdMetrics, error) {
	panic(fmt.Errorf("not implemented: MlmdMetrics - mlmdMetrics"))
}

// MlmdStatistics is the resolver for the mlmdStatistics field.
func (r *queryResolver) MlmdStatistics(ctx context.Context, filter *graph.InstanceFilter) ([]*graph.MlmdStatistics, error) {
	panic(fmt.Errorf("not implemented: MlmdStatistics - mlmdStatistics"))
}

// MlmdTrains is the resolver for the mlmdTrains field.
func (r *queryResolver) MlmdTrains(ctx context.Context, filter *graph.InstanceFilter) ([]*graph.MlmdTrain, error) {
	panic(fmt.Errorf("not implemented: MlmdTrains - mlmdTrains"))
}

// MlmdTransforms is the resolver for the mlmdTransforms field.
func (r *queryResolver) MlmdTransforms(ctx context.Context, filter *graph.InstanceFilter) ([]*graph.MlmdTransform, error) {
	panic(fmt.Errorf("not implemented: MlmdTransforms - mlmdTransforms"))
}

// MlmdProcesses is the resolver for the mlmdProcesses field.
func (r *queryResolver) MlmdProcesses(ctx context.Context, filter *graph.InstanceFilter) ([]*graph.MlmdProcess, error) {
	panic(fmt.Errorf("not implemented: MlmdProcesses - mlmdProcesses"))
}

// MlmdEvaluates is the resolver for the mlmdEvaluates field.
func (r *queryResolver) MlmdEvaluates(ctx context.Context, filter *graph.InstanceFilter) ([]*graph.MlmdEvaluate, error) {
	panic(fmt.Errorf("not implemented: MlmdEvaluates - mlmdEvaluates"))
}

// MlmdDeploys is the resolver for the mlmdDeploys field.
func (r *queryResolver) MlmdDeploys(ctx context.Context, filter *graph.InstanceFilter) ([]*graph.MlmdDeploy, error) {
	panic(fmt.Errorf("not implemented: MlmdDeploys - mlmdDeploys"))
}

// MlmdDataset returns MlmdDatasetResolver implementation.
func (r *Resolver) MlmdDataset() MlmdDatasetResolver { return &mlmdDatasetResolver{r} }

// MlmdDeploy returns MlmdDeployResolver implementation.
func (r *Resolver) MlmdDeploy() MlmdDeployResolver { return &mlmdDeployResolver{r} }

// MlmdEvaluate returns MlmdEvaluateResolver implementation.
func (r *Resolver) MlmdEvaluate() MlmdEvaluateResolver { return &mlmdEvaluateResolver{r} }

// MlmdMetrics returns MlmdMetricsResolver implementation.
func (r *Resolver) MlmdMetrics() MlmdMetricsResolver { return &mlmdMetricsResolver{r} }

// MlmdModel returns MlmdModelResolver implementation.
func (r *Resolver) MlmdModel() MlmdModelResolver { return &mlmdModelResolver{r} }

// MlmdProcess returns MlmdProcessResolver implementation.
func (r *Resolver) MlmdProcess() MlmdProcessResolver { return &mlmdProcessResolver{r} }

// MlmdStatistics returns MlmdStatisticsResolver implementation.
func (r *Resolver) MlmdStatistics() MlmdStatisticsResolver { return &mlmdStatisticsResolver{r} }

// MlmdTrain returns MlmdTrainResolver implementation.
func (r *Resolver) MlmdTrain() MlmdTrainResolver { return &mlmdTrainResolver{r} }

// MlmdTransform returns MlmdTransformResolver implementation.
func (r *Resolver) MlmdTransform() MlmdTransformResolver { return &mlmdTransformResolver{r} }

type mlmdDatasetResolver struct{ *Resolver }
type mlmdDeployResolver struct{ *Resolver }
type mlmdEvaluateResolver struct{ *Resolver }
type mlmdMetricsResolver struct{ *Resolver }
type mlmdModelResolver struct{ *Resolver }
type mlmdProcessResolver struct{ *Resolver }
type mlmdStatisticsResolver struct{ *Resolver }
type mlmdTrainResolver struct{ *Resolver }
type mlmdTransformResolver struct{ *Resolver }
